name: continious integration
on:
  push:
    branches:
      - '**'

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/bidrag-dokument:${{ github.sha }}

jobs:

  build:
    name: Build with maven and docker
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '13'
      - run: env
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: navikt/bidrag-actions/setup-maven@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Verify that no dependencies are of type SNAPSHOT
        uses: navikt/bidrag-actions/verify-mvn-dependencies@v1.0.0
      - name: Build & test with maven
        run: mvn -B install
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${IMAGE} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}

  deploy:
    runs-on: ubuntu-latest
    name: Deploy docker image
    needs: build

    steps:
      - name: Deploy to prodfss
        if: github.ref == 'refs/heads/release'
        run: echo "todo - deploy to prodfss"
      - name: Deploy to devfss - namespace q4
        if: github.ref == 'refs/heads/master'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais.yml
          VAR: namespace=q4
      - name: Deploy to devfss, default namespace
        if: github.ref == 'refs/heads/develop'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais.yml
          VAR: namespace=default
      - name: Deploy to devfss, namespace q1
        if: github.ref != 'refs/heads/develop' && github.ref != 'refs/heads/master' && github.ref != 'refs/heads/release'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: nais.yml
          VAR: namespace=q1