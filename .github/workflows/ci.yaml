name: continious integration
on:
  push:
    branches:
      - '**'

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/bidrag-dokument:${{ github.sha }}

jobs:

  build:
    name: Build with maven and docker
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v1
        with:
          java-version: '13'
      - run: env
      - uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - uses: navikt/bidrag-actions/setup-maven@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Verify that no dependencies are of type SNAPSHOT
        uses: navikt/bidrag-actions/verify-mvn-dependencies@v1.0.1
      - run: mvn install -B -e
      - name: Build and publish Docker image
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          docker build --tag ${IMAGE} .
          docker login docker.pkg.github.com -u ${GITHUB_REPOSITORY} -p ${GITHUB_TOKEN}
          docker push ${IMAGE}
      - if: github.ref == 'refs/heads/develop'
        run: mvn release:update-versions
      - if: github.ref == 'refs/heads/develop'
        run: echo mvn help:evaluate -Dexpression=project.version -q -DforceStdout > .new-version
      - if: github.ref == 'refs/heads/develop'
        uses: navikt/bidrag-actions/git-commit@v4.0.0
        with:
          commit_message: Bumped to new SNAPSHOT version {}
          commit_message_file: .new-version
          pattern: "pom.xml"

  deploy_dev:
    runs-on: ubuntu-latest
    name: Deploy docker image to dev
    if: github.ref != 'refs/heads/release'
    needs: build

    steps:
      - uses: actions/checkout@v2
        with:
          path: deploy
      - name: Deploy to dev-fss - namespace q4
        if: github.ref == 'refs/heads/master'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: deploy/nais.yaml
          VAR: namespace=q4,ingress=https://bidrag-dokument-q4.nais.preprod.local/bidrag-dokument/
      - name: Deploy to dev-fss, default namespace
        if: github.ref == 'refs/heads/develop'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: deploy/nais.yaml
          VAR: namespace=default,ingress=https://bidrag-dokument.nais.preprod.local/
      - name: Deploy to dev-fss, namespace q1
        if: github.ref != 'refs/heads/develop' && github.ref != 'refs/heads/master'
        uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-fss
          RESOURCE: deploy/nais.yaml
          VAR: namespace=q1,ingress=https://bidrag-dokument-q1.nais.preprod.local/

  deploy_prod:
    runs-on: ubuntu-latest
    name: Deploy docker image to prod
    if: github.ref == 'refs/heads/feature-tag'
    needs: build

    steps:
      - run: echo "is deployed :)"
#      - uses: nais/deploy/actions/deploy@v1
#        env:
#          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
#          CLUSTER: prod-fss
#          RESOURCE: deploy/nais-p.yaml
#          VAR: namespace=default

  tag_prod_deploy:
    runs-on: ubuntu-latest
    name: Tag latest deploy to prod
    needs: deploy_prod

    steps:
      - uses: actions/checkout@v2
      - run: mvn help:evaluate -Dexpression=project.version -q -DforceStdout | sed 's/-SNAPSHOT//' > .tag-version
      - run: ls -all
      - uses: navikt/bidrag-actions/git-tag@v4.0.2
        with:
          tag_message: Releasing version {}
          tag_file: .tag-version
